/// <reference types="vitest" />
import { defineConfig, PluginOption, UserConfig } from 'vite'
import { federation } from '@module-federation/vite'
import react, { Options as ReactPluginOptions } from '@vitejs/plugin-react'
import { VitePWA } from 'vite-plugin-pwa'
import { qrcode } from 'vite-plugin-qrcode'
import defaultWorkboxConfig from '../configs/workbox.config'
import basicSsl from '@vitejs/plugin-basic-ssl'
import tsconfigPaths from 'vite-tsconfig-paths'
import checker from 'vite-plugin-checker'
import { findTsModule } from './helpers'
import { ModuleFederationOptions } from '@module-federation/vite/lib/utils/normalizeModuleFederationOptions'
import { lingui } from '@lingui/vite-plugin'

type Args = {
	enableDevPwa?: boolean
	enableHttps?: boolean
	moduleFederationOptions?: Partial<ModuleFederationOptions> & Pick<ModuleFederationOptions, 'name'>
	reactPluginOptions?: ReactPluginOptions
	enableI8n?: boolean
	checkTypescript?: boolean
} & UserConfig

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Vite —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–ª–∞–≥–∏–Ω–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
 * 
 * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã –¥–ª—è React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:
 * - PWA –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ–º manifest.ts
 * - Module Federation –¥–ª—è –º–∏–∫—Ä–æ—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–≤
 * - HTTPS —Å —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º
 * - –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Å Lingui
 * - TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞
 * - React —Å Emotion –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π TypeScript –ø—É—Ç–µ–π
 * 
 * @param {Args} config - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
 * @param {boolean} [config.enableDevPwa=false] - –í–∫–ª—é—á–∏—Ç—å PWA –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç QR –∫–æ–¥ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤
 * @param {boolean} [config.enableHttps=false] - –í–∫–ª—é—á–∏—Ç—å HTTPS —Å —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º
 * @param {boolean} [config.enableI8n=false] - –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Å Lingui
 * @param {boolean} [config.checkTypescript=true] - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É TypeScript –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 * @param {Partial<ModuleFederationOptions> & Pick<ModuleFederationOptions, 'name'>} [config.moduleFederationOptions] - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Module Federation –¥–ª—è –º–∏–∫—Ä–æ—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–≤
 * @param {ReactPluginOptions} [config.reactPluginOptions] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è React –ø–ª–∞–≥–∏–Ω–∞
 * @param {UserConfig} config - –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ Vite –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (plugins, build, resolve –∏ —Ç.–¥.)
 * 
 * @returns {Promise<UserConfig>} –ü–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vite
 * 
 * @example
 * ```typescript
 * // –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
 * export default createViteConfig({
 *   // –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 * })
 * 
 * // –° PWA –∏ HTTPS
 * export default createViteConfig({
 *   enableDevPwa: true,
 *   enableHttps: true,
 *   // –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 * })
 * 
 * // –° Module Federation
 * export default createViteConfig({
 *   moduleFederationOptions: {
 *     name: 'myApp',
 *     remotes: {
 *       remoteApp: 'remoteApp@http://localhost:3001/remoteEntry.js'
 *     }
 *   }
 * })
 * ```
 * 
 * @see {@link https://vitejs.dev/config/} - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Vite
 */
export async function createViteConfig({
	enableDevPwa = false,
	enableHttps = false,
	enableI8n = false,
	checkTypescript = true,
	moduleFederationOptions,
	reactPluginOptions,
	...userConfig
}: Args) {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	console.log('üöÄ [ViteConfig] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Vite...')
	
	const manifest = await findTsModule('manifest.ts')
	const workboxConfig = await findTsModule('workbox.config.ts')

	const { plugins: userPlugins, build, ...restUserConfig } = userConfig
	const plugins: PluginOption[] = []
	const babelPlugins: string[] = ['@emotion/babel-plugin']
	

	// PWA –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
	if (manifest) {
		console.log('üì± [PWA] –û–±–Ω–∞—Ä—É–∂–µ–Ω manifest.ts - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA')
		
		const workboxSource = workboxConfig ? 'custom' : 'default'
		console.log(`‚öôÔ∏è  [PWA] Workbox –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${workboxSource}`)
		
		// https://vite-pwa-org.netlify.app/
		plugins.push(
			VitePWA({
				devOptions: {
					enabled: enableDevPwa,
					type: 'module',
				},

				manifest,
				registerType: 'autoUpdate',
				workbox: workboxConfig ? workboxConfig : defaultWorkboxConfig,
				includeAssets: ['**/*', 'sw.js'],
			}),
		)
		if (enableDevPwa) {
			console.log('üì≤ [PWA] QR –∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤')
			plugins.push(
				qrcode({
					filter: url =>
						url.startsWith('http://192.168.0.') || url.startsWith('https://192.168.0.'),
				}),
			)
		}
		console.log('‚úÖ [PWA] vite-plugin-pwa —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω')
	} else {
		console.log('‚ÑπÔ∏è  [PWA] manifest.ts –Ω–µ –Ω–∞–π–¥–µ–Ω - PWA –æ—Ç–∫–ª—é—á–µ–Ω')
	}

	// Module Federation –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
	if (moduleFederationOptions) {
		plugins.push(
			federation({
				filename: 'remoteEntry.js',
				...moduleFederationOptions,
			}),
		)
		console.log('‚úÖ [ModuleFederation] @module-federation/vite —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω')
	} else {
		console.log('‚ÑπÔ∏è  [ModuleFederation] Module Federation –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
	}

	// HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
	if (enableHttps) {
		console.log('üîí [HTTPS] –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞')
		plugins.push(basicSsl())
		console.log('‚úÖ [HTTPS] @vitejs/plugin-basic-ssl —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω')
	} else {
		console.log('‚ÑπÔ∏è  [HTTPS] HTTPS –æ—Ç–∫–ª—é—á–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTP')
	}

	// –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è (i18n)
	if (enableI8n) {
		console.log('üåç [i18n] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Å Lingui')
		babelPlugins.push('@lingui/babel-plugin-lingui-macro')
		plugins.push(lingui())
		console.log('‚úÖ [i18n] @lingui/vite-plugin —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω')
	} else {
		console.log('‚ÑπÔ∏è  [i18n] –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞')
	}

	if (checkTypescript) {
		console.log('üîç [TypeScript] –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')
		plugins.push(
			checker({
				typescript: true,
			}),
		)
		console.log('‚úÖ [TypeScript] vite-plugin-checker —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω')
	} else {
		console.log('‚ÑπÔ∏è  [TypeScript] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞')
	}

	// –§–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
	const finalConfig = defineConfig({
		test: {
			globals: true,
		},
		plugins: [
			...plugins,
			react({
				jsxImportSource: '@emotion/react',
				babel: {
					plugins: babelPlugins,
				},
				...reactPluginOptions
			}),
			tsconfigPaths(),

			...(userPlugins ?? []),
		],
		resolve: {
			extensions: ['.tsx', '.ts', '.jsx', '.js', '.json', '.mjs', '.mts'],
		},
		build: {
			rollupOptions: {
				onwarn(warning, warn) {
					if (
						warning.code === 'SOURCEMAP_ERROR' ||
						warning.message.includes('PURE') // ignore PURE comment warning
					) {
						return
					}
					warn(warning)
				},
			},
			...build,
		},
		...restUserConfig,
	})
	console.log('üéâ [ViteConfig] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vite —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!')
	
	return finalConfig
}

export * from 'vite-plugin-pwa'
export * from 'workbox-build'
export * from 'workbox-window'
